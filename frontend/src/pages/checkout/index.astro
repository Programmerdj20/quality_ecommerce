---
/**
 * Checkout Page - Página de pago
 *
 * Formulario para completar la información del cliente
 * y proceder al pago con Mercado Pago o Transferencia Bancaria
 */

import BaseLayout from '@/layouts/BaseLayout.astro';
import CheckoutCartItems from '@/components/checkout/CheckoutCartItems.astro';
import PaymentMethodSelector from '@/components/checkout/PaymentMethodSelector.astro';
---

<BaseLayout
  title="Checkout - Quality Ecommerce"
  description="Completa tu compra de forma segura con Mercado Pago"
>
  <div class="min-h-screen bg-gray-50 py-12">
    <div class="container mx-auto px-4">
      <div class="max-w-6xl mx-auto">
        <!-- Header -->
        <div class="mb-8">
          <h1 class="font-heading font-bold text-3xl md:text-4xl text-gray-800 mb-2">
            Finalizar Compra
          </h1>
          <p class="text-gray-600">Completa tu información para proceder al pago</p>
        </div>

        <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
          <!-- Formulario de Checkout (2/3) -->
          <div class="lg:col-span-2 order-2 lg:order-1">
            <!-- Selector de Método de Pago -->
            <PaymentMethodSelector />

            <!-- Formulario de Información -->
            <div class="bg-white rounded-2xl shadow-md p-6 md:p-8">
              <h2 class="font-heading font-bold text-2xl text-gray-800 mb-6">
                Información de Contacto
              </h2>

              <form id="checkoutForm" class="space-y-6">
                <!-- Email -->
                <div>
                  <label for="email" class="block text-sm font-semibold text-gray-700 mb-2">
                    Email *
                  </label>
                  <input
                    type="email"
                    id="email"
                    name="email"
                    required
                    class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-gray-800 focus:border-transparent transition-all"
                    placeholder="tu@email.com"
                  />
                </div>

                <!-- Nombre y Apellido -->
                <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                  <div>
                    <label for="nombre" class="block text-sm font-semibold text-gray-700 mb-2">
                      Nombre *
                    </label>
                    <input
                      type="text"
                      id="nombre"
                      name="nombre"
                      required
                      class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-gray-800 focus:border-transparent transition-all"
                      placeholder="Juan"
                    />
                  </div>
                  <div>
                    <label for="apellido" class="block text-sm font-semibold text-gray-700 mb-2">
                      Apellido
                    </label>
                    <input
                      type="text"
                      id="apellido"
                      name="apellido"
                      class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-gray-800 focus:border-transparent transition-all"
                      placeholder="Pérez"
                    />
                  </div>
                </div>

                <!-- Teléfono -->
                <div>
                  <label for="telefono" class="block text-sm font-semibold text-gray-700 mb-2">
                    Teléfono *
                  </label>
                  <input
                    type="tel"
                    id="telefono"
                    name="telefono"
                    required
                    class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-gray-800 focus:border-transparent transition-all"
                    placeholder="3001234567"
                  />
                </div>

                <!-- Documento -->
                <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
                  <div>
                    <label for="tipoDocumento" class="block text-sm font-semibold text-gray-700 mb-2">
                      Tipo de Documento
                    </label>
                    <select
                      id="tipoDocumento"
                      name="tipoDocumento"
                      class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-gray-800 focus:border-transparent transition-all"
                    >
                      <option value="CC">CC</option>
                      <option value="CE">CE</option>
                      <option value="NIT">NIT</option>
                    </select>
                  </div>
                  <div class="md:col-span-2">
                    <label for="documento" class="block text-sm font-semibold text-gray-700 mb-2">
                      Número de Documento
                    </label>
                    <input
                      type="text"
                      id="documento"
                      name="documento"
                      class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-gray-800 focus:border-transparent transition-all"
                      placeholder="1234567890"
                    />
                  </div>
                </div>

                <!-- Dirección de Envío -->
                <div class="pt-6 border-t border-gray-200">
                  <h3 class="font-heading font-bold text-xl text-gray-800 mb-4">
                    Dirección de Envío
                  </h3>

                  <div class="space-y-4">
                    <!-- Dirección -->
                    <div>
                      <label for="direccion" class="block text-sm font-semibold text-gray-700 mb-2">
                        Dirección *
                      </label>
                      <input
                        type="text"
                        id="direccion"
                        name="direccion"
                        required
                        class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-gray-800 focus:border-transparent transition-all"
                        placeholder="Calle 123 #45-67"
                      />
                    </div>

                    <!-- Ciudad y Departamento -->
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                      <div>
                        <label for="ciudad" class="block text-sm font-semibold text-gray-700 mb-2">
                          Ciudad *
                        </label>
                        <input
                          type="text"
                          id="ciudad"
                          name="ciudad"
                          required
                          class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-gray-800 focus:border-transparent transition-all"
                          placeholder="Bogotá"
                        />
                      </div>
                      <div>
                        <label for="departamento" class="block text-sm font-semibold text-gray-700 mb-2">
                          Departamento *
                        </label>
                        <input
                          type="text"
                          id="departamento"
                          name="departamento"
                          required
                          class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-gray-800 focus:border-transparent transition-all"
                          placeholder="Cundinamarca"
                        />
                      </div>
                    </div>

                    <!-- Código Postal y Referencias -->
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                      <div>
                        <label for="codigoPostal" class="block text-sm font-semibold text-gray-700 mb-2">
                          Código Postal
                        </label>
                        <input
                          type="text"
                          id="codigoPostal"
                          name="codigoPostal"
                          class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-gray-800 focus:border-transparent transition-all"
                          placeholder="110111"
                        />
                      </div>
                      <div>
                        <label for="referencias" class="block text-sm font-semibold text-gray-700 mb-2">
                          Referencias
                        </label>
                        <input
                          type="text"
                          id="referencias"
                          name="referencias"
                          class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-gray-800 focus:border-transparent transition-all"
                          placeholder="Casa amarilla"
                        />
                      </div>
                    </div>
                  </div>
                </div>

                <!-- Términos y Condiciones -->
                <div class="pt-6 border-t border-gray-200">
                  <label class="flex items-start gap-3 cursor-pointer">
                    <input
                      type="checkbox"
                      id="aceptaTerminos"
                      name="aceptaTerminos"
                      required
                      class="mt-1 w-5 h-5 text-gray-800 border-gray-300 rounded focus:ring-gray-800"
                    />
                    <span class="text-sm text-gray-600">
                      Acepto los <a href="/terminos" class="text-gray-800 font-semibold hover:underline">Términos y Condiciones</a> y la
                      <a href="/privacidad" class="text-gray-800 font-semibold hover:underline">Política de Privacidad</a>
                    </span>
                  </label>
                </div>

                <!-- Botón de Pago -->
                <div class="pt-4">
                  <button
                    type="submit"
                    id="submitBtn"
                    class="w-full bg-gradient-to-r from-gray-800 to-black text-white font-bold py-4 px-6 rounded-lg hover:from-black hover:to-gray-900 transition-all duration-300 transform hover:scale-[1.02] active:scale-[0.98] shadow-lg"
                  >
                    <span id="btnText">Continuar al Pago</span>
                    <span id="btnLoading" class="hidden">
                      <svg class="animate-spin inline-block w-5 h-5 mr-2" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                        <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                        <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                      </svg>
                      Procesando...
                    </span>
                  </button>
                </div>
              </form>

              <!-- Mercado Pago Wallet Container (inicialmente oculto) -->
              <div id="walletContainer" class="hidden mt-6">
                <div class="border-t border-gray-200 pt-6">
                  <h3 class="font-heading font-bold text-xl text-gray-800 mb-4 text-center">
                    Completa tu pago con Mercado Pago
                  </h3>
                  <div id="wallet_container"></div>
                </div>
              </div>
            </div>
          </div>

          <!-- Resumen del Pedido (1/3) -->
          <div class="lg:col-span-1 order-1 lg:order-2">
            <!-- Productos del Carrito (Sticky) -->
            <CheckoutCartItems />

            <!-- Resumen de Totales (Sticky) -->
            <div class="bg-white rounded-2xl shadow-md p-6 lg:sticky lg:top-24">
              <h2 class="font-heading font-bold text-xl text-gray-800 mb-4">
                Resumen del Pedido
              </h2>

              <!-- Totales -->
              <div class="border-t border-gray-200 pt-4 space-y-2">
                <div class="flex justify-between text-gray-600">
                  <span>Subtotal:</span>
                  <span id="subtotalAmount">$0</span>
                </div>
                <div class="flex justify-between text-gray-600">
                  <span>IVA (19%):</span>
                  <span id="ivaAmount">$0</span>
                </div>
                <div class="flex justify-between font-bold text-lg text-gray-800 pt-2 border-t border-gray-200">
                  <span>Total:</span>
                  <span id="totalAmount">$0</span>
                </div>
              </div>

              <!-- Badges de Seguridad -->
              <div class="mt-6 pt-6 border-t border-gray-200">
                <div class="flex items-center gap-2 text-sm text-gray-600 mb-2">
                  <svg class="w-5 h-5 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z"/>
                  </svg>
                  <span>Compra 100% Segura</span>
                </div>
                <div class="flex items-center gap-2 text-sm text-gray-600">
                  <svg class="w-5 h-5 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 10h18M7 15h1m4 0h1m-7 4h12a3 3 0 003-3V8a3 3 0 00-3-3H6a3 3 0 00-3 3v8a3 3 0 003 3z"/>
                  </svg>
                  <span>Pago procesado por Mercado Pago</span>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</BaseLayout>

<script>
  import { cartStore, clearCart } from '@/stores/cartStore';
  import {
    setCheckoutCustomerInfo,
    setCurrentPreferenceId,
    setCheckoutLoading,
    setCheckoutError,
    generateOrderReference,
  } from '@/stores/orderStore';
  import type { CheckoutFormData } from '@/types/order';

  // Cargar SDK de Mercado Pago
  const script = document.createElement('script');
  script.src = 'https://sdk.mercadopago.com/js/v2';
  script.async = true;
  document.head.appendChild(script);

  // Variable para almacenar el método de pago seleccionado
  let selectedPaymentMethod: 'mercadopago' | 'transferencia' = 'mercadopago';

  // Formatear moneda
  const formatCurrency = (amount: number) => {
    return new Intl.NumberFormat('es-CO', {
      style: 'currency',
      currency: 'COP',
      minimumFractionDigits: 0,
    }).format(amount);
  };

  // Renderizar totales del carrito
  function renderCartTotals() {
    const cart = cartStore.get();
    const subtotalEl = document.getElementById('subtotalAmount');
    const ivaEl = document.getElementById('ivaAmount');
    const totalEl = document.getElementById('totalAmount');

    if (!subtotalEl || !ivaEl || !totalEl) return;

    // Renderizar totales
    const iva = cart.subtotal * 0.19;
    subtotalEl.textContent = formatCurrency(cart.subtotal);
    ivaEl.textContent = formatCurrency(iva);
    totalEl.textContent = formatCurrency(cart.total);
  }

  // Escuchar cambios en el método de pago
  document.addEventListener('paymentMethodChanged', (e: any) => {
    selectedPaymentMethod = e.detail.method;
    console.log('Método de pago seleccionado:', selectedPaymentMethod);

    // Actualizar texto del botón según método seleccionado
    const btnText = document.getElementById('btnText');
    if (btnText) {
      if (selectedPaymentMethod === 'transferencia') {
        btnText.textContent = 'Generar Pedido';
      } else {
        btnText.textContent = 'Continuar al Pago';
      }
    }
  });

  // Manejar submit del formulario
  async function handleSubmit(e: Event) {
    e.preventDefault();

    const form = e.target as HTMLFormElement;
    const formData = new FormData(form);

    // Validar que el carrito no esté vacío
    const cart = cartStore.get();
    if (cart.items.length === 0) {
      alert('Tu carrito está vacío');
      window.location.href = '/';
      return;
    }

    // Construir datos del checkout
    const checkoutData: CheckoutFormData = {
      email: formData.get('email') as string,
      nombre: formData.get('nombre') as string,
      apellido: formData.get('apellido') as string || undefined,
      telefono: formData.get('telefono') as string,
      documento: formData.get('documento') as string || undefined,
      tipoDocumento: (formData.get('tipoDocumento') as 'CC' | 'CE' | 'NIT') || undefined,
      direccion: formData.get('direccion') as string,
      ciudad: formData.get('ciudad') as string,
      departamento: formData.get('departamento') as string,
      codigoPostal: formData.get('codigoPostal') as string || undefined,
      referencias: formData.get('referencias') as string || undefined,
      aceptaTerminos: formData.get('aceptaTerminos') === 'on',
    };

    // Guardar info del cliente en el store
    setCheckoutCustomerInfo(checkoutData);

    // Generar referencia del pedido
    const orderReference = generateOrderReference();

    // Mostrar loading
    setCheckoutLoading(true);
    const submitBtn = document.getElementById('submitBtn') as HTMLButtonElement;
    const btnText = document.getElementById('btnText');
    const btnLoading = document.getElementById('btnLoading');
    if (submitBtn && btnText && btnLoading) {
      submitBtn.disabled = true;
      btnText.classList.add('hidden');
      btnLoading.classList.remove('hidden');
    }

    try {
      // Flujo según método de pago seleccionado
      if (selectedPaymentMethod === 'transferencia') {
        // Flujo de Transferencia Bancaria
        // TODO: Aquí se debería crear el pedido en el backend con estado "pendiente"
        // y redirigir a una página de confirmación con instrucciones

        alert(`Pedido creado exitosamente!\n\nReferencia: ${orderReference}\n\nRealiza la transferencia a la cuenta:\nLlave: 98664389\n\nEnvía el comprobante al correo que recibirás por email.`);

        // Limpiar carrito antes de redirigir
        clearCart();

        // Redirigir a página de confirmación (pending)
        window.location.href = '/checkout/pending';

      } else {
        // Flujo de Mercado Pago
        const response = await fetch('/api/checkout/create-preference', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            items: cart.items,
            customerInfo: checkoutData,
            orderReference,
          }),
        });

        if (!response.ok) {
          throw new Error('Error al crear la preferencia de pago');
        }

        const data = await response.json();

        // Guardar preference ID
        setCurrentPreferenceId(data.preferenceId);

        // Inicializar Wallet de Mercado Pago
        const mp = new (window as any).MercadoPago(import.meta.env.PUBLIC_MP_PUBLIC_KEY);
        const bricksBuilder = mp.bricks();

        // Ocultar formulario y mostrar wallet
        form.classList.add('hidden');
        const walletContainer = document.getElementById('walletContainer');
        if (walletContainer) {
          walletContainer.classList.remove('hidden');
        }

        // Renderizar wallet brick
        await bricksBuilder.create('wallet', 'wallet_container', {
          initialization: {
            preferenceId: data.preferenceId,
          },
        });
      }
    } catch (error) {
      console.error('Error:', error);
      setCheckoutError(error instanceof Error ? error.message : 'Error desconocido');
      alert('Hubo un error al procesar tu pedido. Por favor intenta de nuevo.');
    } finally {
      setCheckoutLoading(false);
      if (submitBtn && btnText && btnLoading) {
        submitBtn.disabled = false;
        btnText.classList.remove('hidden');
        btnLoading.classList.add('hidden');
      }
    }
  }

  // Inicializar
  document.addEventListener('DOMContentLoaded', () => {
    renderCartTotals();

    const form = document.getElementById('checkoutForm');
    if (form) {
      form.addEventListener('submit', handleSubmit);
    }

    // Suscribirse a cambios del carrito para actualizar totales
    cartStore.subscribe(() => {
      renderCartTotals();
    });
  });
</script>
