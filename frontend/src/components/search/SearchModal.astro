---
/**
 * SearchModal - Modal de búsqueda AJAX moderna
 * Búsqueda en tiempo real con resultados dinámicos
 */
---

<!-- Overlay oscuro -->
<div
  id="search-modal-overlay"
  class="fixed inset-0 bg-black/90 z-[80] opacity-0 pointer-events-none transition-opacity duration-300"
  aria-hidden="true"
></div>

<!-- Modal de Búsqueda -->
<div
  id="search-modal"
  class="fixed inset-0 z-[90] flex items-start justify-center pt-20 px-4 opacity-0 pointer-events-none transition-all duration-300"
  role="dialog"
  aria-modal="true"
  aria-labelledby="search-modal-title"
>
  <div class="w-full max-w-2xl bg-white rounded-2xl shadow-2xl transform scale-95 transition-transform duration-300">
    <!-- Header: Input de búsqueda -->
    <div class="p-6 border-b border-gray-300">
      <div class="flex items-center gap-3">
        <!-- Icono Lupa -->
        <svg class="w-6 h-6 text-gray-500 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
        </svg>

        <!-- Input -->
        <input
          type="text"
          id="search-input"
          placeholder="Buscar productos..."
          class="flex-1 text-lg font-medium text-gray-800 placeholder-gray-500 bg-transparent border-none outline-none"
          autocomplete="off"
          autofocus
        />

        <!-- Botón Cerrar -->
        <button
          id="search-modal-close"
          class="p-2 hover:bg-gray-100 rounded-lg transition-colors flex-shrink-0"
          aria-label="Cerrar búsqueda"
        >
          <svg class="w-5 h-5 text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
          </svg>
        </button>
      </div>
    </div>

    <!-- Resultados -->
    <div id="search-results" class="max-h-96 overflow-y-auto">
      <!-- Estado inicial: Sugerencias -->
      <div id="search-suggestions" class="p-6">
        <p class="text-sm font-medium text-gray-500 mb-3">Categorías populares</p>
        <div class="flex flex-wrap gap-2">
          <a href="/productos/tecnologia" class="px-3 py-1.5 text-sm font-medium text-gray-800 bg-gray-50 hover:bg-gray-300 rounded-full transition-colors">
            Tecnología
          </a>
          <a href="/productos/hogar" class="px-3 py-1.5 text-sm font-medium text-gray-800 bg-gray-50 hover:bg-gray-300 rounded-full transition-colors">
            Hogar
          </a>
          <a href="/productos/moda" class="px-3 py-1.5 text-sm font-medium text-gray-800 bg-gray-50 hover:bg-gray-300 rounded-full transition-colors">
            Moda
          </a>
        </div>
      </div>

      <!-- Loading state -->
      <div id="search-loading" class="hidden p-6">
        <div class="flex items-center justify-center gap-3">
          <div class="w-5 h-5 border-2 border-gray-300 border-t-black rounded-full animate-spin"></div>
          <span class="text-sm text-gray-500">Buscando...</span>
        </div>
      </div>

      <!-- Lista de resultados -->
      <div id="search-results-list" class="hidden py-2"></div>

      <!-- No hay resultados -->
      <div id="search-no-results" class="hidden p-6 text-center">
        <svg class="w-16 h-16 text-gray-300 mx-auto mb-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
        </svg>
        <p class="text-sm font-medium text-gray-800 mb-1">No se encontraron resultados</p>
        <p class="text-sm text-gray-500">Intenta con otras palabras clave</p>
      </div>
    </div>

    <!-- Footer: Atajos de teclado -->
    <div class="px-6 py-3 border-t border-gray-300 bg-gray-50">
      <div class="flex items-center justify-between text-xs text-gray-500">
        <div class="flex items-center gap-4">
          <span class="flex items-center gap-1">
            <kbd class="px-2 py-1 bg-white border border-gray-300 rounded text-xs">Enter</kbd>
            <span>para seleccionar</span>
          </span>
          <span class="flex items-center gap-1">
            <kbd class="px-2 py-1 bg-white border border-gray-300 rounded text-xs">ESC</kbd>
            <span>para cerrar</span>
          </span>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  import { PLACEHOLDER_PRODUCTS } from '@/utils/api/placeholderData';
  import type { Product } from '@/types';

  const modal = document.getElementById('search-modal');
  const overlay = document.getElementById('search-modal-overlay');
  const closeBtn = document.getElementById('search-modal-close');
  const searchInput = document.getElementById('search-input') as HTMLInputElement;
  const suggestions = document.getElementById('search-suggestions');
  const loading = document.getElementById('search-loading');
  const resultsList = document.getElementById('search-results-list');
  const noResults = document.getElementById('search-no-results');

  let isOpen = false;
  let searchTimeout: number | null = null;

  /**
   * Formatea precio en COP
   */
  function formatPrice(price: number): string {
    return new Intl.NumberFormat('es-CO', {
      style: 'currency',
      currency: 'COP',
      minimumFractionDigits: 0,
      maximumFractionDigits: 0,
    }).format(price);
  }

  /**
   * Abre el modal de búsqueda
   */
  function openSearchModal() {
    isOpen = true;
    document.body.style.overflow = 'hidden';

    overlay?.classList.remove('pointer-events-none', 'opacity-0');
    overlay?.classList.add('opacity-100');

    modal?.classList.remove('pointer-events-none', 'opacity-0');
    modal?.classList.add('opacity-100');
    modal?.querySelector('.bg-white')?.classList.remove('scale-95');
    modal?.querySelector('.bg-white')?.classList.add('scale-100');

    // Focus en input
    setTimeout(() => searchInput?.focus(), 100);
  }

  /**
   * Cierra el modal de búsqueda
   */
  function closeSearchModal() {
    isOpen = false;
    document.body.style.overflow = '';

    overlay?.classList.add('pointer-events-none', 'opacity-0');
    overlay?.classList.remove('opacity-100');

    modal?.classList.add('pointer-events-none', 'opacity-0');
    modal?.classList.remove('opacity-100');
    modal?.querySelector('.bg-white')?.classList.add('scale-95');
    modal?.querySelector('.bg-white')?.classList.remove('scale-100');

    // Reset input
    if (searchInput) searchInput.value = '';
    showSuggestions();
  }

  /**
   * Muestra sugerencias iniciales
   */
  function showSuggestions() {
    suggestions?.classList.remove('hidden');
    loading?.classList.add('hidden');
    resultsList?.classList.add('hidden');
    noResults?.classList.add('hidden');
  }

  /**
   * Muestra loading
   */
  function showLoading() {
    suggestions?.classList.add('hidden');
    loading?.classList.remove('hidden');
    resultsList?.classList.add('hidden');
    noResults?.classList.add('hidden');
  }

  /**
   * Realiza la búsqueda
   */
  function performSearch(query: string) {
    if (query.trim().length === 0) {
      showSuggestions();
      return;
    }

    showLoading();

    // Simular delay de búsqueda (300ms)
    if (searchTimeout) clearTimeout(searchTimeout);

    searchTimeout = window.setTimeout(() => {
      const results = PLACEHOLDER_PRODUCTS.filter(product =>
        product.nombre.toLowerCase().includes(query.toLowerCase()) ||
        product.descripcion.toLowerCase().includes(query.toLowerCase()) ||
        product.categoria.toLowerCase().includes(query.toLowerCase())
      ).slice(0, 5); // Máximo 5 resultados

      displayResults(results);
    }, 300);
  }

  /**
   * Muestra los resultados
   */
  function displayResults(products: Product[]) {
    loading?.classList.add('hidden');

    if (products.length === 0) {
      noResults?.classList.remove('hidden');
      resultsList?.classList.add('hidden');
      return;
    }

    noResults?.classList.add('hidden');
    resultsList?.classList.remove('hidden');

    if (resultsList) {
      resultsList.innerHTML = products.map(product => {
        const precioFinal = product.precioDescuento || product.precio;
        return `
          <a
            href="/productos/${product.slug}"
            class="flex items-center gap-4 px-6 py-3 hover:bg-gray-50 transition-colors"
          >
            <img
              src="${product.imagenes.principal}"
              alt="${product.nombre}"
              class="w-16 h-16 object-cover rounded-lg border border-gray-300 flex-shrink-0"
            />
            <div class="flex-1 min-w-0">
              <p class="text-sm font-semibold text-gray-800 truncate">${product.nombre}</p>
              <p class="text-xs text-gray-500 capitalize">${product.categoria}</p>
            </div>
            <div class="text-right flex-shrink-0">
              <p class="text-sm font-bold text-black">${formatPrice(precioFinal)}</p>
              ${product.precioDescuento ? `
                <p class="text-xs text-gray-500 line-through">${formatPrice(product.precio)}</p>
              ` : ''}
            </div>
          </a>
        `;
      }).join('');
    }
  }

  // Exponer función globalmente
  (window as any).openSearchModal = openSearchModal;
  (window as any).closeSearchModal = closeSearchModal;

  // Event listeners
  overlay?.addEventListener('click', closeSearchModal);
  closeBtn?.addEventListener('click', closeSearchModal);

  searchInput?.addEventListener('input', (e) => {
    const query = (e.target as HTMLInputElement).value;
    performSearch(query);
  });

  // Cerrar con ESC
  document.addEventListener('keydown', (e) => {
    if (e.key === 'Escape' && isOpen) {
      closeSearchModal();
    }
  });
</script>
